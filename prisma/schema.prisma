generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String   
  password  String
  cart      Cart[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  items     CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String @id @default(cuid())
  cart      Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  item      Item   @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    String
  quantity  Int
}

model Item {
  id          String    @id @default(cuid())
  name        String
  price       Float
  category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  String?
  carts       CartItem[]
  orders      OrderItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id        String   @id @default(cuid())
  name      String
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  number    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OrderItem {
  id       String @id @default(cuid())
  order    Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId  String
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   String
  quantity Int
}
